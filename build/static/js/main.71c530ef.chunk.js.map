{"version":3,"sources":["MaskCanvas.jsx","resizeMaskCanvas.js","fabricContext.js","PreviewCanvas.jsx","hooks/useGenericSetter.js","components/SliderChanger.jsx","components/BitCheckbox.jsx","Controls.jsx","hooks/useTranslations.js","maskItem.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","container","display","flexGrow","MaskCanvas","setFabricCanvas","canvasRef","useRef","containerRef","classes","useEffect","current","fabricCanvas","fabric","Canvas","enableRetinaScaling","skipOffscreen","maskWidth","maskHeight","width","height","size","MaskItem","prototype","setDimensions","totalItems","mask","Array","h","w","item","top","left","add","resizeMaskCanvas","window","ref","className","MaskCanvasContext","React","createContext","PreviewCanvasContext","ActiveObjectsContext","useMaskContext","useContext","useActiveObjectsContext","PreviewCanvas","previewCanvas","useGenericSetter","activeObjects","useCallback","properties","map","object","set","dirty","activeObject","canvas","fire","requestRenderAll","useStyle","formControl","margin","SliderChanger","disabled","property","value","label","min","max","step","genericSetter","FormControl","InputLabel","id","Slider","labelId","onChange","_","newValue","memo","theme","checkbox","color","BitCheckobx","bit","checked","bitValue","bitSetter","FormControlLabel","labelPlacement","style","control","Checkbox","Controls","t","a","Grid","spacing","xs","TextField","variant","Button","Box","flexDirection","BitCheckbox","onIntensity","offIntensity","WrappedControls","useState","setActiveObjects","selectionHandler","getActiveObjects","on","off","Provider","ActiveSelection","controls","hasBorders","lockMovementX","lockMovementY","perPixelTargetFind","util","createClass","Object","type","strokeWidth","fill","borderColor","cacheProperties","concat","initialize","options","call","this","_render","ctx","isR","isG","isB","fillStyle","fillRect","drawBar","isOn","position","intensityScale","start","toObject","fromObject","_object","callback","root","padding","content","transition","transitions","create","easing","sharp","duration","leavingScreen","PersistentDrawerLeft","maskCanvas","setMaskcanvas","setPreviewCanvas","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71c530ef.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fabric } from 'fabric';\nimport { resizeMaskCanvas } from './resizeMaskCanvas';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n}));\n\nexport const MaskCanvas = ({ setFabricCanvas }) => {\n  const canvasRef = useRef();\n  const containerRef = useRef();\n  const classes = useStyles();\n  useEffect(() => {\n    if (canvasRef.current) {\n      const fabricCanvas = new fabric.Canvas(canvasRef.current, {\n        enableRetinaScaling: false,\n        skipOffscreen: false,\n      });\n      fabricCanvas.maskWidth = 8;\n      fabricCanvas.maskHeight = 8;\n      resizeMaskCanvas(fabricCanvas);\n      setFabricCanvas(fabricCanvas);\n      window.fabricCanvas = fabricCanvas;\n    }\n  }, []);\n\n  return (\n    <div ref={containerRef} className={classes.container}>\n      <canvas ref={canvasRef} ></canvas>\n    </div>);\n}\n","import { fabric } from 'fabric';\n\nexport const resizeMaskCanvas = (fabricCanvas) => {\n  const width = fabricCanvas.maskWidth;\n  const height = fabricCanvas.maskHeight;\n  const size = fabric.MaskItem.prototype.size;\n  fabricCanvas.setDimensions({\n    width: width * size,\n    height: height * size,\n  });\n  const totalItems = width * height;\n  fabricCanvas.mask = new Array(totalItems)\n  for (let h = 0; h < height; h++) {\n    for (let w = 0; w < width; w++) {\n      const item = new fabric.MaskItem({\n        top: h * size,\n        left: w * size,\n      });\n      fabricCanvas.mask[h * width + w] = item;\n    }\n  }\n  fabricCanvas.add(...fabricCanvas.mask);\n}\n","import React, { useContext } from 'react';\n\nconst MaskCanvasContext = React.createContext(null);\nconst PreviewCanvasContext = React.createContext(null);\n\n\nconst ActiveObjectsContext = React.createContext(null);\n\nconst useMaskContext = () => useContext(MaskCanvasContext);\nconst usePreviewContext = () => useContext(PreviewCanvasContext);\n\nconst useActiveObjectsContext = () => useContext(ActiveObjectsContext);\n\nexport {\n  MaskCanvasContext,\n  PreviewCanvasContext,\n  useMaskContext,\n  usePreviewContext,\n  ActiveObjectsContext,\n  useActiveObjectsContext,\n};\n","import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fabric } from 'fabric';\nimport { useFabricContext } from './fabricContext';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n}));\n\nexport const PreviewCanvas = ({ setFabricCanvas }) => {\n  const canvasRef = useRef();\n  const containerRef = useRef();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const fabricCanvas = new fabric.Canvas(canvasRef.current);\n      setFabricCanvas(fabricCanvas);\n      window.previewCanvas = fabricCanvas;\n    }\n  }, [setFabricCanvas]);\n\n  return (\n    <div ref={containerRef} className={classes.container}>\n      <canvas ref={canvasRef} ></canvas>\n    </div>);\n}\n\nexport default PreviewCanvas;\n","import { useCallback } from 'react';\nimport { useActiveObjectsContext } from '../fabricContext';\n\n// set on one or more objects some properties,\n// using the simple set on all objects rather than one\n\nconst useGenericSetter = () => {\n  const activeObjects = useActiveObjectsContext();\n  return useCallback((properties) => {\n    activeObjects.map((object) => {\n      object.set({ dirty: true, ...properties });\n    });\n    const activeObject = activeObjects[0];\n    if (activeObject) {\n      activeObject.canvas.fire('object:propertySet');\n      activeObject.canvas.requestRenderAll();\n    }\n  }, [activeObjects]);\n}\n\nexport default useGenericSetter;\n","import React, { memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport useGenericSetter from '../hooks/useGenericSetter';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyle = makeStyles({\n  formControl: {\n    width: '100%',\n    margin: '16px',\n  }\n});\n\nexport const SliderChanger = ({ disabled, property, value, label, min, max, step }) => {\n  const genericSetter = useGenericSetter();\n  const classes = useStyle();\n  return (\n    <>\n      <FormControl className={classes.formControl}>\n        <InputLabel id={`slider-${property}`}>{label}</InputLabel>\n        <Slider\n          labelId={`slider-${property}`}\n          value={value}\n          onChange={( _, newValue) => genericSetter({ [property]: newValue })}\n          label={label}\n          min={min}\n          max={max}\n          step={step}\n          disabled={disabled}\n        />\n      </FormControl>\n    </>\n  )\n}\n\nexport default memo(SliderChanger);\n","import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport useGenericSetter from '../hooks/useGenericSetter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useActiveObjectsContext } from '../fabricContext';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  checkbox: {\n    color: 'inherit',\n    '&.Mui-checked': {\n      color: 'inherit',\n    }\n  },\n}));\n\n// bitvalue can be only 4,2,1\nexport const BitCheckobx = ({ bit, color }) => {\n  const { checkbox } = useStyles();\n  const activeObjects = useActiveObjectsContext();\n  const activeObject = activeObjects[0];\n  const genericSetter = useGenericSetter();\n  const checked = activeObject?.bitValue & bit;\n  const bitSetter = useCallback(\n    () => genericSetter({ bitValue: activeObject.bitValue ^ bit }),\n    [bit, activeObject, genericSetter]\n  )\n  return (\n    <FormControlLabel labelPlacement=\"start\" style={{ color }} control={<Checkbox disabled={!activeObject} className={checkbox} checked={checked} onChange={bitSetter} />} label={color} />\n  )\n}\n\nexport default BitCheckobx;\n","import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SliderChanger from './components/SliderChanger';\nimport { useMaskContext, useActiveObjectsContext, ActiveObjectsContext } from './fabricContext';\nimport { useTranslations } from './hooks/useTranslations';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport BitCheckbox from './components/BitCheckbox';\n\n\n\n\nconst Controls = () => {\n  const fabricCanvas = useMaskContext();\n  const activeObject = useActiveObjectsContext()[0];\n  const { t } = useTranslations();\n  return <Grid container spacing={2} >\n      <Grid item xs={12} >\n        <TextField label={t('mask width')} value={fabricCanvas?.maskWidth} variant=\"outlined\" />\n        <TextField label={t('mask height')} value={fabricCanvas?.maskHeight} variant=\"outlined\" />\n        <Button variant=\"contained\">\n          {t('OK')}\n        </Button>\n      </Grid>\n      <Grid item xs={2}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <BitCheckbox color=\"red\" bit={4} />\n          <BitCheckbox color=\"green\" bit={2} />\n          <BitCheckbox color=\"blue\" bit={1} />\n        </Box>\n      </Grid>\n      <Grid item xs={4} >\n        <Box display=\"flex\" flexDirection=\"column\">\n          <SliderChanger\n            label={t('On intensity')}\n            property=\"onIntensity\"\n            min={0}\n            step={1}\n            disabled={!activeObject}\n            max={15}\n            value={activeObject?.onIntensity ?? 0}\n          />\n          <SliderChanger\n            label={t('Off intensity')}\n            property=\"offIntensity\"\n            min={0}\n            step={1}\n            disabled={!activeObject}\n            max={15}\n            value={activeObject?.offIntensity ?? 0}\n          />\n        </Box>\n      </Grid>\n    </Grid>\n};\n\nconst WrappedControls = () => {\n  const fabricCanvas = useMaskContext();\n  const [activeObjects, setActiveObjects] = useState([]);\n  useEffect(() => {\n    const selectionHandler = () => {\n      setActiveObjects([...fabricCanvas.getActiveObjects()]);\n    };\n    if (fabricCanvas) {\n      fabricCanvas.on('object:propertySet', selectionHandler);\n      fabricCanvas.on('selection:cleared', selectionHandler);\n      fabricCanvas.on('selection:created', selectionHandler);\n      fabricCanvas.on('selection:updated', selectionHandler);\n    }\n    return () => {\n      if (fabricCanvas) {\n        fabricCanvas.off('object:propertySet', selectionHandler);\n        fabricCanvas.off('selection:cleared', selectionHandler);\n        fabricCanvas.off('selection:created', selectionHandler);\n        fabricCanvas.off('selection:updated', selectionHandler);\n      }\n    }\n  }, [fabricCanvas])\n  return (\n    <ActiveObjectsContext.Provider value={activeObjects}>\n      <Controls />\n    </ActiveObjectsContext.Provider>\n  );\n};\n\nexport default WrappedControls;\n","// this is a placeholder so that someone can swap later for i18n support/\nconst useTranslations = () => {\n  return { t: (a) => a, }\n}\n\nexport { useTranslations };\n","import { fabric } from 'fabric';\n\nfabric.ActiveSelection.prototype.controls = {};\nfabric.ActiveSelection.prototype.hasBorders = false;\nfabric.ActiveSelection.prototype.lockMovementX = true;\nfabric.ActiveSelection.prototype.lockMovementY = true;\nfabric.ActiveSelection.prototype.perPixelTargetFind = true;\n\nconst MaskItem = fabric.util.createClass(fabric.Object, {\n  type: 'maskItem',\n  size: 48,\n  strokeWidth: 0,\n  // from 0 to 7\n  bitValue: 4,\n  // bright value from 0 to 15,\n  onIntensity: 8,\n  // dark value from 0 to 15,\n  offIntensity: 2,\n  // we need a truthy value but we are not going to use this.\n  fill: 'not-used',\n  lockMovementX: true,\n  lockMovementY: true,\n  borderColor: 'black',\n  controls: {},\n  // activeOn: 'up',\n\n  cacheProperties: fabric.Object.prototype.cacheProperties.concat('bitValue', 'size', 'onIntensity', 'offIntensity'),\n\n  initialize: function(options) {\n    fabric.Object.prototype.initialize.call(this, options);\n    this.width = this.size;\n    this.height = this.size;\n  },\n\n  _render(ctx) {\n    const isR = this.bitValue & 4;\n    const isG = this.bitValue & 2;\n    const isB = this.bitValue & 1;\n\n    ctx.fillStyle = `rgb(${isR ? 255 : 0},${isG ? 255 : 0},${isB ? 255 : 0})`;\n    ctx.fillRect(-this.size/2, -this.size/2, this.size - 7, this.size);\n\n    this.drawBar(ctx, 'red', isR, 6);\n    this.drawBar(ctx, 'green', isG, 4);\n    this.drawBar(ctx, 'blue', isB, 2);\n  },\n\n  drawBar(ctx, color, isOn, position) {\n    const intensityScale = this.size / 2 / 16;\n    const start = isOn ? - intensityScale * (this.onIntensity + 1) : 0;\n    const size = isOn ? intensityScale * (this.onIntensity + 1) : intensityScale * (this.offIntensity + 1)\n    ctx.fillStyle = color;\n    ctx.fillRect(\n      (this.size / 2) - position,\n      start,\n      2,\n      size\n    );\n  },\n\n  toObject() {\n    return fabric.Object.prototype.toObject.call(this, ['size', 'bitValue', 'onIntensity', 'offIntensity']);\n  }\n});\n\nMaskItem.fromObject = function (_object, callback) {\n\n};\n\n\nfabric.MaskItem = MaskItem;\n\nexport default MaskItem;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MaskCanvas } from './MaskCanvas';\nimport { PreviewCanvas } from './PreviewCanvas';\nimport { MaskCanvasContext, PreviewCanvasContext } from './fabricContext';\nimport Controls from './Controls';\nimport MaskItem from './maskItem';\n// import clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    padding: '16px',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    height: '100%',\n    padding: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const [maskCanvas, setMaskcanvas] = useState(null);\n  const [previewCanvas, setPreviewCanvas] = useState(null);\n  return (\n    <PreviewCanvasContext.Provider value={previewCanvas} >\n      <MaskCanvasContext.Provider value={maskCanvas} >\n        <div className={classes.root}>\n          <CssBaseline />\n          <Controls />\n          <main\n            className={classes.content}\n          >\n            <MaskCanvas setFabricCanvas={setMaskcanvas} />\n            <PreviewCanvas setFabricCanvas={setPreviewCanvas} />\n          </main>\n        </div>\n      </MaskCanvasContext.Provider>\n    </PreviewCanvasContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}